{"version":3,"sources":["assets/starwarsPics/aNewHope.jpg","assets/starwarsPics/theEmpireStrikesBack.jpg","assets/starwarsPics/returnOfTheJedi.jpg","assets/starwarsPics/thePhantomMenace.jpg","assets/starwarsPics/attackOfTheClones.jpg","assets/starwarsPics/revengeOfTheSith.jpg","assets/starwarsPics/LukeSkywalker.png","assets/starwarsPics/C3PO.png","assets/starwarsPics/R2-D2_Droid.png","assets/starwarsPics/DarthVader.png","assets/starwarsPics/Leia.png","assets/starwarsPics/OwenLars.png","assets/starwarsPics/BeruLars.png","assets/starwarsPics/R5D4.png","assets/starwarsPics/BiggsDarklighter.png","assets/starwarsPics/ObiWan.png","assets/starwarsPics/Tatooine.png","assets/starwarsPics/Alderaan.jpg","assets/starwarsPics/Yavin-4.png","assets/starwarsPics/Hoth.png","assets/starwarsPics/Dagobah.jpg","assets/starwarsPics/Bespin.png","assets/starwarsPics/Endor.png","assets/starwarsPics/Naboo.png","assets/starwarsPics/Coruscant.jpg","assets/starwarsPics/Kamino.jpg","assets/starwarsPics/human.png","assets/starwarsPics/droid.png","assets/starwarsPics/wookie.png","assets/starwarsPics/Rodian.png","assets/starwarsPics/hutt.png","assets/starwarsPics/yoda.png","assets/starwarsPics/Trandoshan.png","assets/starwarsPics/monCalamari.png","assets/starwarsPics/ewok.png","assets/starwarsPics/Sullustan.png","assets/starwarsPics/cr90.png","assets/starwarsPics/stardestroyer.png","assets/starwarsPics/Sentinel.png","assets/starwarsPics/deathStar.png","assets/starwarsPics/milleniumFalcon.png","assets/starwarsPics/Y-Wing.png","assets/starwarsPics/X-wing.png","assets/starwarsPics/tieX1.png","assets/starwarsPics/Executor.png","assets/starwarsPics/rebelTransport.png","assets/starwarsPics/Sandcrawler.png","assets/starwarsPics/T16skyhopper.png","assets/starwarsPics/x34.png","assets/starwarsPics/tieLn.png","assets/starwarsPics/snowspeeder.png","assets/starwarsPics/TIE_Bomber.png","assets/starwarsPics/ATAT.png","assets/starwarsPics/atst.png","assets/starwarsPics/Cloud-car-v2.png","assets/starwarsPics/sailBarge.png","assets/starwarsimg.js","components/films.js","components/people.js","components/starships.js","components/planets.js","components/vehicles.js","components/species.js","App.js","reportWebVitals.js","index.js"],"names":["data","require","Films","useState","error","setError","isLoaded","setIsLoaded","items","setItems","getImageLink","idVal","arr","films","src","default","useEffect","fetch","then","res","json","result","message","className","results","map","item","index","episode_id","title","producer","release_date","opening_crawl","People","people","name","birth_year","gender","height","eye_color","skin_color","hair_color","Starships","starships","model","crew","cargo_capacity","passengers","cost_in_credits","manufacturer","hyperdrive_rating","starship_class","Planets","planets","climate","gravity","population","terrain","orbital_period","Vehicles","vehicles","max_atmosphering_speed","vehicle_class","Species","species","classification","average_lifespan","designation","language","average_height","skin_colors","hair_colors","eye_colors","Page","to","FilmsPage","PeoplePage","PlanetsPage","SpeciesPage","StarshipsPage","VehiclesPage","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6JAAA,OAAe,cAA0B,sC,6BCAzC,OAAe,cAA0B,kD,6BCAzC,OAAe,cAA0B,6C,6BCAzC,OAAe,cAA0B,8C,6BCAzC,OAAe,cAA0B,+C,6BCAzC,OAAe,cAA0B,8C,6BCAzC,OAAe,cAA0B,2C,6BCAzC,OAAe,cAA0B,kC,6BCAzC,OAAe,cAA0B,yC,6BCAzC,OAAe,cAA0B,wC,6BCAzC,OAAe,cAA0B,kC,6BCAzC,OAAe,cAA0B,sC,6BCAzC,OAAe,cAA0B,sC,6BCAzC,OAAe,cAA0B,kC,6BCAzC,OAAe,cAA0B,8C,6BCAzC,OAAe,cAA0B,oC,6BCAzC,OAAe,cAA0B,sC,6BCAzC,OAAe,cAA0B,sC,6BCAzC,OAAe,cAA0B,qC,6BCAzC,OAAe,cAA0B,kC,6BCAzC,OAAe,cAA0B,qC,6BCAzC,OAAe,cAA0B,oC,6BCAzC,OAAe,cAA0B,mC,6BCAzC,OAAe,cAA0B,mC,6BCAzC,OAAe,cAA0B,uC,6BCAzC,OAAe,cAA0B,oC,6BCAzC,OAAe,cAA0B,mC,6BCAzC,OAAe,cAA0B,mC,6BCAzC,OAAe,cAA0B,oC,6BCAzC,OAAe,cAA0B,oC,6BCAzC,OAAe,cAA0B,kC,6BCAzC,OAAe,cAA0B,kC,6BCAzC,OAAe,cAA0B,wC,6BCAzC,OAAe,cAA0B,yC,6BCAzC,OAAe,cAA0B,kC,6BCAzC,OAAe,cAA0B,uC,6BCAzC,OAAe,cAA0B,kC,6BCAzC,OAAe,cAA0B,2C,6BCAzC,OAAe,cAA0B,sC,6BCAzC,OAAe,cAA0B,uC,6BCAzC,OAAe,cAA0B,6C,6BCAzC,OAAe,cAA0B,oC,6BCAzC,OAAe,cAA0B,oC,6BCAzC,OAAe,cAA0B,mC,6BCAzC,OAAe,cAA0B,sC,6BCAzC,OAAe,cAA0B,4C,6BCAzC,OAAe,cAA0B,yC,6BCAzC,OAAe,cAA0B,0C,6BCAzC,OAAe,cAA0B,iC,6BCAzC,OAAe,cAA0B,mC,6BCAzC,OAAe,cAA0B,yC,6BCAzC,OAAe,cAA0B,wC,6BCAzC,OAAe,cAA0B,kC,6BCAzC,OAAe,cAA0B,kC,6BCAzC,OAAe,cAA0B,0C,6BCAzC,OAAe,cAA0B,uC,oICA5BA,EAAO,CAChB,MAAS,C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","file":"static/js/main.e382d912.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/aNewHope.034dbba1.jpg\";","export default __webpack_public_path__ + \"static/media/theEmpireStrikesBack.37d39154.jpg\";","export default __webpack_public_path__ + \"static/media/returnOfTheJedi.c827f43d.jpg\";","export default __webpack_public_path__ + \"static/media/thePhantomMenace.737fdd01.jpg\";","export default __webpack_public_path__ + \"static/media/attackOfTheClones.529cf728.jpg\";","export default __webpack_public_path__ + \"static/media/revengeOfTheSith.11d3764d.jpg\";","export default __webpack_public_path__ + \"static/media/LukeSkywalker.9f84c425.png\";","export default __webpack_public_path__ + \"static/media/C3PO.34cac879.png\";","export default __webpack_public_path__ + \"static/media/R2-D2_Droid.9f6cfede.png\";","export default __webpack_public_path__ + \"static/media/DarthVader.4fce904f.png\";","export default __webpack_public_path__ + \"static/media/Leia.ee0e9fcd.png\";","export default __webpack_public_path__ + \"static/media/OwenLars.026a7535.png\";","export default __webpack_public_path__ + \"static/media/BeruLars.a80bf577.png\";","export default __webpack_public_path__ + \"static/media/R5D4.d61317ba.png\";","export default __webpack_public_path__ + \"static/media/BiggsDarklighter.b22b96c5.png\";","export default __webpack_public_path__ + \"static/media/ObiWan.0ae84967.png\";","export default __webpack_public_path__ + \"static/media/Tatooine.a9714e0e.png\";","export default __webpack_public_path__ + \"static/media/Alderaan.b3872db0.jpg\";","export default __webpack_public_path__ + \"static/media/Yavin-4.3960a498.png\";","export default __webpack_public_path__ + \"static/media/Hoth.6a2c3452.png\";","export default __webpack_public_path__ + \"static/media/Dagobah.1351fac1.jpg\";","export default __webpack_public_path__ + \"static/media/Bespin.49516158.png\";","export default __webpack_public_path__ + \"static/media/Endor.53ef1c8f.png\";","export default __webpack_public_path__ + \"static/media/Naboo.55e0d22b.png\";","export default __webpack_public_path__ + \"static/media/Coruscant.33f5e81e.jpg\";","export default __webpack_public_path__ + \"static/media/Kamino.d68c980b.jpg\";","export default __webpack_public_path__ + \"static/media/human.5d5f767d.png\";","export default __webpack_public_path__ + \"static/media/droid.c46f7f9d.png\";","export default __webpack_public_path__ + \"static/media/wookie.9ea29184.png\";","export default __webpack_public_path__ + \"static/media/Rodian.1c41e9c3.png\";","export default __webpack_public_path__ + \"static/media/hutt.9ae8eb8a.png\";","export default __webpack_public_path__ + \"static/media/yoda.818d87aa.png\";","export default __webpack_public_path__ + \"static/media/Trandoshan.211c7272.png\";","export default __webpack_public_path__ + \"static/media/monCalamari.742a7b41.png\";","export default __webpack_public_path__ + \"static/media/ewok.56191dba.png\";","export default __webpack_public_path__ + \"static/media/Sullustan.dd89336c.png\";","export default __webpack_public_path__ + \"static/media/cr90.71b1000e.png\";","export default __webpack_public_path__ + \"static/media/stardestroyer.951873b3.png\";","export default __webpack_public_path__ + \"static/media/Sentinel.2a877148.png\";","export default __webpack_public_path__ + \"static/media/deathStar.49685d6b.png\";","export default __webpack_public_path__ + \"static/media/milleniumFalcon.25a43f5c.png\";","export default __webpack_public_path__ + \"static/media/Y-Wing.38df0553.png\";","export default __webpack_public_path__ + \"static/media/X-wing.8683256f.png\";","export default __webpack_public_path__ + \"static/media/tieX1.528ad73e.png\";","export default __webpack_public_path__ + \"static/media/Executor.048aeb73.png\";","export default __webpack_public_path__ + \"static/media/rebelTransport.23a56ba8.png\";","export default __webpack_public_path__ + \"static/media/Sandcrawler.7621aa3d.png\";","export default __webpack_public_path__ + \"static/media/T16skyhopper.50d2d14b.png\";","export default __webpack_public_path__ + \"static/media/x34.56a6c15f.png\";","export default __webpack_public_path__ + \"static/media/tieLn.495c2280.png\";","export default __webpack_public_path__ + \"static/media/snowspeeder.b0a6dab3.png\";","export default __webpack_public_path__ + \"static/media/TIE_Bomber.18204ffe.png\";","export default __webpack_public_path__ + \"static/media/ATAT.fdf51d8d.png\";","export default __webpack_public_path__ + \"static/media/atst.21477ecf.png\";","export default __webpack_public_path__ + \"static/media/Cloud-car-v2.1c9f0cb5.png\";","export default __webpack_public_path__ + \"static/media/sailBarge.c1ab3cc2.png\";","export const data = {\n    \"films\": {\n        \"4\": require(\"../assets/starwarsPics/aNewHope.jpg\"),\n        \"5\": require(\"../assets/starwarsPics/theEmpireStrikesBack.jpg\"),\n        \"6\": require(\"../assets/starwarsPics/returnOfTheJedi.jpg\"),\n        \"1\": require(\"../assets/starwarsPics/thePhantomMenace.jpg\"),\n        \"2\": require(\"../assets/starwarsPics/attackOfTheClones.jpg\"),\n        \"3\": require(\"../assets/starwarsPics/revengeOfTheSith.jpg\"),\n    },\n    \"people\": {\n        \"Luke Skywalker\": require(\"../assets/starwarsPics/LukeSkywalker.png\"),\n        \"C-3PO\": require(\"../assets/starwarsPics/C3PO.png\"),\n        \"R2-D2\": require(\"../assets/starwarsPics/R2-D2_Droid.png\"),\n        \"Darth Vader\": require(\"../assets/starwarsPics/DarthVader.png\"),\n        \"Leia Organa\": require(\"../assets/starwarsPics/Leia.png\"),\n        \"Owen Lars\": require(\"../assets/starwarsPics/OwenLars.png\"),\n        \"Beru Whitesun lars\": require(\"../assets/starwarsPics/BeruLars.png\"),\n        \"R5-D4\": require(\"../assets/starwarsPics/R5D4.png\"),\n        \"Biggs Darklighter\": require(\"../assets/starwarsPics/BiggsDarklighter.png\"),\n        \"Obi-Wan Kenobi\": require(\"../assets/starwarsPics/ObiWan.png\")\n\n    },\n    \"planets\": {\n        \"Tatooine\": require(\"../assets/starwarsPics/Tatooine.png\"),\n        \"Alderaan\": require(\"../assets/starwarsPics/Alderaan.jpg\"),\n        \"Yavin IV\": require(\"../assets/starwarsPics/Yavin-4.png\"),\n        \"Hoth\": require(\"../assets/starwarsPics/Hoth.png\"),\n        \"Dagobah\": require(\"../assets/starwarsPics/Dagobah.jpg\"),\n        \"Bespin\": require(\"../assets/starwarsPics/Bespin.png\"),\n        \"Endor\": require(\"../assets/starwarsPics/Endor.png\"),\n        \"Naboo\": require(\"../assets/starwarsPics/Naboo.png\"),\n        \"Coruscant\": require(\"../assets/starwarsPics/Coruscant.jpg\"),\n        \"Kamino\": require(\"../assets/starwarsPics/Kamino.jpg\")\n    },\n    \"species\": {\n        \"Human\": require(\"../assets/starwarsPics/human.png\"),\n        \"Droid\": require(\"../assets/starwarsPics/droid.png\"),\n        \"Wookie\": require(\"../assets/starwarsPics/wookie.png\"),\n        \"Rodian\": require(\"../assets/starwarsPics/Rodian.png\"),\n        \"Hutt\": require(\"../assets/starwarsPics/hutt.png\"),\n        \"Yoda's species\": require(\"../assets/starwarsPics/yoda.png\"),\n        \"Trandoshan\": require(\"../assets/starwarsPics/Trandoshan.png\"),\n        \"Mon Calamari\": require(\"../assets/starwarsPics/monCalamari.png\"),\n        \"Ewok\": require(\"../assets/starwarsPics/ewok.png\"),\n        \"Sullustan\": require(\"../assets/starwarsPics/Sullustan.png\")\n    },\n    \"starships\": {\n        \"CR90 corvette\": require(\"../assets/starwarsPics/cr90.png\"),\n        \"Star Destroyer\": require(\"../assets/starwarsPics/stardestroyer.png\"),\n        \"Sentinel-class landing craft\": require(\"../assets/starwarsPics/Sentinel.png\"),\n        \"Death Star\": require(\"../assets/starwarsPics/deathStar.png\"),\n        \"Millennium Falcon\": require(\"../assets/starwarsPics/milleniumFalcon.png\"),\n        \"Y-wing\": require(\"../assets/starwarsPics/Y-Wing.png\"),\n        \"X-wing\": require(\"../assets/starwarsPics/X-wing.png\"),\n        \"TIE Advanced x1\": require(\"../assets/starwarsPics/tieX1.png\"),\n        \"Executor\": require(\"../assets/starwarsPics/Executor.png\"),\n        \"Rebel transport\": require(\"../assets/starwarsPics/rebelTransport.png\")\n    },\n    \"vehicles\": {\n        \"Sand Crawler\": require(\"../assets/starwarsPics/Sandcrawler.png\"),\n        \"T-16 skyhopper\": require(\"../assets/starwarsPics/T16skyhopper.png\"),\n        \"X-34 landspeeder\": require(\"../assets/starwarsPics/x34.png\"),\n        \"TIE/LN starfighter\": require(\"../assets/starwarsPics/tieLn.png\"),\n        \"Snowspeeder\": require(\"../assets/starwarsPics/snowspeeder.png\"),\n        \"TIE bomber\": require(\"../assets/starwarsPics/TIE_Bomber.png\"),\n        \"AT-AT\": require(\"../assets/starwarsPics/ATAT.png\"),\n        \"AT-ST\": require(\"../assets/starwarsPics/atst.png\"),\n        \"Storm IV Twin-Pod cloud car\": require(\"../assets/starwarsPics/Cloud-car-v2.png\"),\n        \"Sail barge\": require(\"../assets/starwarsPics/sailBarge.png\")\n    }\n}","import React, { useState, useEffect } from \"react\";\nimport {data} from \"../assets/starwarsimg\"\n\nconst Films = () => {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n\n    const getImageLink = (idVal) => {\n        let arr = data.films\n        return (\n            <img src={arr[idVal].default}></img>\n        )\n    }\n\n\n    useEffect(() => {\n        fetch(\"https://swapi.dev/api/films/\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n            setIsLoaded(true);\n            setItems(result);\n            },\n            (error) => {\n            setIsLoaded(true);\n            setError(error);\n            }\n        )\n    }, [])\n    \n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        // add cool loading thing\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <div className=\"linkContent\">\n                {items.results && items.results.map((item, index) => {\n                return (\n                    <div className=\"tileContent\">\n                        {getImageLink(item.episode_id)}\n                        <div className=\"content\">\n                            <h1 key={index}>{item.title}</h1>\n                            <p>Producer: {item.producer}</p>\n                            <p>Release Date: {item.release_date}</p>\n                            <p>Episode ID: {item.episode_id}</p>\n                            <p>Opening Crawl: {item.opening_crawl}</p>\n                        </div>\n                    </div>\n                )})}\n            </div>\n        );\n    }   \n}\n\nexport default Films;","import React, { useState, useEffect } from \"react\";\nimport {data} from \"../assets/starwarsimg\"\n\nconst People = () => {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n\n    const getImageLink = (idVal) => {\n        let arr = data.people\n        return (\n            <img src={arr[idVal].default}></img>\n        )\n    }\n\n    useEffect(() => {\n        fetch(\"https://swapi.dev/api/people/\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n            setIsLoaded(true);\n            setItems(result);\n            },\n            (error) => {\n            setIsLoaded(true);\n            setError(error);\n            }\n        )\n    }, [])\n    \n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        // add cool loading thing\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <div className=\"linkContent\">\n                {items.results && items.results.map((item, index) => {\n                return (\n                    <div className=\"tileContent\">\n                        {getImageLink(item.name)}\n                        <div className=\"content\">\n                            <h1 key={index}>{item.name}</h1>\n                            <p>Birth Year: {item.birth_year}</p>\n                            <p>Gender: {item.gender}</p>\n                            <p>Height: {item.height}</p>\n                            <p>Eye Colour: {item.eye_color}</p>\n                            <p>Skin Colour: {item.skin_color}</p>\n                            <p>Hair Colour: {item.hair_color}</p>\n                        </div>\n                    </div>\n                )})}\n            </div>\n        );\n    }   \n}\n\n\n\nexport default People;","import React, { useState, useEffect } from \"react\";\nimport {data} from \"../assets/starwarsimg\"\n\nconst Starships = () => {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n\n    const getImageLink = (idVal) => {\n        let arr = data.starships\n        return (\n            <img src={arr[idVal].default}></img>\n        )\n    }\n\n    useEffect(() => {\n        fetch(\"https://swapi.dev/api/starships/\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n            setIsLoaded(true);\n            setItems(result);\n            },\n            (error) => {\n            setIsLoaded(true);\n            setError(error);\n            }\n        )\n    }, [])\n    \n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        // add cool loading thing\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <div className=\"linkContent\">\n                {items.results && items.results.map((item, index) => {\n                return (\n                    <div className=\"tileContent\">\n                        <div className=\"content\">\n                            {getImageLink(item.name)}\n                         <h1 key={index}>{item.name}</h1>\n                            <p>Model: {item.model}</p>\n                            <p>Crew: {item.crew}</p>\n                            <p>Cargo Capacity: {item.cargo_capacity}</p>\n                            <p>Passenger Capacity: {item.passengers}</p>\n                            <p>Cost: {item.cost_in_credits} credits</p>\n                            <p>Manufacturer: {item.manufacturer}</p>\n                            <p>Hyperdrive Rating: {item.hyperdrive_rating}</p>\n                            <p>Starship Class: {item.starship_class}</p>\n                        </div>\n                    </div>\n                )})}\n            </div>\n        );\n    }   \n}\n\nexport default Starships;","import React, { useState, useEffect } from \"react\";\nimport {data} from \"../assets/starwarsimg\"\n\nconst Planets = () => {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n\n    const getImageLink = (idVal) => {\n        let arr = data.planets\n        return (\n            <img src={arr[idVal].default}></img>\n        )\n    }\n\n    useEffect(() => {\n        fetch(\"https://swapi.dev/api/planets/\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n            setIsLoaded(true);\n            setItems(result);\n            },\n            (error) => {\n            setIsLoaded(true);\n            setError(error);\n            }\n        )\n    }, [])\n    \n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        // add cool loading thing\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <div className=\"linkContent\">\n                {items.results && items.results.map((item, index) => {\n                return (\n                    <div className=\"tileContent\">\n                        {getImageLink(item.name)}\n                        <div className=\"content\">\n                            <h1 key={index}>{item.name}</h1>\n                            <p>Climate: {item.climate}</p>\n                            <p>Gravity: {item.gravity}</p>\n                            <p>Population: {item.population}</p>\n                            <p>Terrain: {item.terrain}</p>\n                            <p>Orbital Period: {item.orbital_period} days</p>\n                        </div>\n                    </div>\n                )})}\n            </div>\n        );\n    }   \n}\n\nexport default Planets;","import React, { useState, useEffect } from \"react\";\nimport {data} from \"../assets/starwarsimg\"\n\nconst Vehicles = () => {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n\n    const getImageLink = (idVal) => {\n        let arr = data.vehicles\n        return (\n            <img src={arr[idVal].default}></img>\n        )\n    }\n\n    useEffect(() => {\n        fetch(\"https://swapi.dev/api/vehicles/\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n            setIsLoaded(true);\n            setItems(result);\n            },\n            (error) => {\n            setIsLoaded(true);\n            setError(error);\n            }\n        )\n    }, [])\n    \n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        // add cool loading thing\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <div className=\"linkContent\">\n                {items.results && items.results.map((item, index) => {\n                return (\n                    <div className=\"tileContent\">\n                        <div className=\"content\">\n                            {getImageLink(item.name)}\n                            <h1 key={index}>{item.name}</h1>\n                            <p>Model: {item.model}</p>\n                            <p>Crew: {item.crew}</p>\n                            <p>Max Speed: {item.max_atmosphering_speed}</p>\n                            <p>Passenger Capacity: {item.passengers}</p>\n                            <p>Cost: {item.cost_in_credits} credits</p>\n                            <p>Manufacturer: {item.manufacturer}</p>\n                            <p>Vehicle Class: {item.vehicle_class}</p>\n                        </div>\n                    </div>\n                )})}\n            </div>\n        );\n    }   \n}\n\nexport default Vehicles;","import React, { useState, useEffect } from \"react\";\nimport {data} from \"../assets/starwarsimg\"\n\nconst Species = () => {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n\n    const getImageLink = (idVal) => {\n        let arr = data.species\n        return (\n            <img src={arr[idVal].default}></img>\n        )\n    }\n\n    useEffect(() => {\n        fetch(\"https://swapi.dev/api/species/\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n            setIsLoaded(true);\n            setItems(result);\n            },\n            (error) => {\n            setIsLoaded(true);\n            setError(error);\n            }\n        )\n    }, [])\n    \n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        // add cool loading thing\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <div className=\"linkContent\">\n                {items.results && items.results.map((item, index) => {\n                return (\n                    <div className=\"tileContent\">\n                        {getImageLink(item.name)}\n                        <div className=\"content\">\n                            <h1 key={index}>{item.name}</h1>\n                            <p>Classification: {item.classification}</p>\n                            <p>Average Lifespan: {item.average_lifespan} years</p>\n                            <p>Designation: {item.designation}</p>\n                            <p>Language: {item.language}</p>\n                            <p>Average Height: {item.average_height}cm</p>\n                            <p>Skin Colours: {item.skin_colors}</p>\n                            <p>Hair Colours: {item.hair_colors}</p>\n                            <p>Eye Colours: {item.eye_colors}</p>\n                        </div>\n                    </div>\n                )})}\n            </div>\n        );\n    }   \n}\n\nexport default Species;","// import React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Films from \"./components/films\"\nimport People from \"./components/people\"\nimport Starships from \"./components/starships\"\nimport Planets from \"./components/planets\"\nimport Vehicles from \"./components/vehicles\"\nimport Species from \"./components/species\"\nimport \"./App.css\";\n\nconst App = () => {\n\n\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/films\">Films</Link>\n            </li>\n            <li>\n              <Link to=\"/people\">People</Link>\n            </li>\n            <li>\n              <Link to=\"/planets\">Planets</Link>\n            </li>\n            <li>\n              <Link to=\"/species\">Species</Link>\n            </li>\n            <li>\n              <Link to=\"/starships\">Starships</Link>\n            </li>\n            <li>\n              <Link to=\"/vehicles\">Vehicles</Link>\n            </li>\n          </ul>\n        </nav>\n\n        \n        <Switch>\n          <Route path=\"/films\">\n            <FilmsPage />\n          </Route>\n          <Route path=\"/people\">\n            <PeoplePage />\n          </Route>\n          <Route path=\"/planets\">\n            <PlanetsPage />\n          </Route>\n          <Route path=\"/species\">\n            <SpeciesPage />\n          </Route>\n          <Route path=\"/starships\">\n            <StarshipsPage />\n          </Route>\n          <Route path=\"/vehicles\">\n            <VehiclesPage />\n          </Route>\n          \n          <Route path=\"/\">\n            <Page />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nfunction Page() {\n  return (\n    <div className=\"homeContent\">\n      <div className=\"tileRow\">\n        <div className=\"pageRedirectTile\">\n          <Link to=\"/films\">FILMS</Link>\n        </div>\n        <div className=\"pageRedirectTile\">\n          <Link to=\"/people\">PEOPLE</Link>\n        </div>\n      </div>\n      <div className=\"tileRow\">\n        <div className=\"pageRedirectTile\">\n          <Link to=\"/planets\">PLANETS</Link>\n        </div>\n        <div className=\"pageRedirectTile\">\n          <Link to=\"/species\">SPECIES</Link>\n        </div>\n      </div>\n      <div className=\"tileRow\">\n        <div className=\"pageRedirectTile\">\n          <Link to=\"/starships\">STARSHIPS</Link>\n        </div>\n        <div className=\"pageRedirectTile\">\n          <Link to=\"/vehicles\">VEHICLES</Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction FilmsPage() {\n  return (\n    <div className=\"pageContent\">\n      <h2>Films</h2>\n      <Films />\n    </div>\n  );\n}\n\nfunction PeoplePage() {\n  return (\n    <div className=\"pageContent\">\n      <h2>People</h2>\n      <People />\n    </div>\n  );\n}\n\nfunction PlanetsPage() {\n  return (\n    <div className=\"pageContent\">\n      <h2>Planets</h2>\n      <Planets />\n    </div>\n  );\n}\n\nfunction SpeciesPage() {\n  return (\n    <div className=\"pageContent\">\n      <h2>Species</h2>\n      <Species />\n    </div>\n  );\n}\n\nfunction StarshipsPage() {\n  return (\n    <div className=\"pageContent\">\n      <h2>Starships</h2>\n      <Starships />\n    </div>\n  );\n}\n\nfunction VehiclesPage() {\n  return (\n    <div className=\"pageContent\">\n      <h2>Vehicles</h2>\n      <Vehicles />\n    </div>\n  );\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}